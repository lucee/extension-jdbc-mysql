<?xml version="1.0" encoding="UTF-8"?>
<project default="clean" basedir="." name="datasource-extension">
	<description>
        Building Datasource Extension
    </description>

  <property name="temp" location="temp"/>
  <property name="dist"  location="target"/>

  <scriptdef name="trim" language="javascript">
     <attribute name="text" />
     <attribute name="property" />
     <![CDATA[
      var text = attributes.get("text");
      project.setProperty(attributes.get("property"), text.trim());
     ]]>
  </scriptdef>

  <scriptdef name="replace" language="javascript">
     <attribute name="haystack" />
     <attribute name="needle" />
     <attribute name="repl" />
     <attribute name="property" />
     <![CDATA[
      var text = attributes.get("haystack");
      var needle = attributes.get("needle");
      var repl = attributes.get("repl");
      text=text.trim();

      var regex = new RegExp(needle,'g');
      text=text.replace(regex,repl);
      project.setProperty(attributes.get("property"), text);
     ]]>
  </scriptdef>

  <scriptdef name="first" language="javascript">
     <attribute name="text" />
     <attribute name="property" />
     <attribute name="default" />     
     <![CDATA[
      var text = attributes.get("text").trim();
      var def = attributes.get("default");

      if(def && def.indexOf('${')==-1)
        text=def;

      var arr=text.split(/\s+/);
      text=arr[0];

      project.setProperty(attributes.get("property"), text);
     ]]>
  </scriptdef>

  <scriptdef name="updateProp" language="javascript">
     <attribute name="name" />
     <attribute name="value" />   
     <![CDATA[
      project.setProperty(attributes.get("name"), attributes.get("value"));
     ]]>
  </scriptdef>
  


  <scriptdef name="getDirFrom" language="javascript">
     <attribute name="path" />
     <attribute name="property" />
     <![CDATA[
      var path = attributes.get("path");
      var index=path.lastIndexOf('/');
      if(index==-1) index=path.lastIndexOf('\\');
      path=path.substring(0,index);
      
      project.setProperty(attributes.get("property"), path);
     ]]>
  </scriptdef>

  <scriptdef name="getNameFrom" language="javascript">
     <attribute name="path" />
     <attribute name="property" />
     <![CDATA[
      var path = attributes.get("path");
      var index=path.lastIndexOf('/');
      if(index==-1) index=path.lastIndexOf('\\');
      path=path.substring(index+1);
      
      project.setProperty(attributes.get("property"), path);
     ]]>
  </scriptdef>

  <scriptdef name="dot2line" language="javascript">
     <attribute name="text" />
     <attribute name="property" />
     <![CDATA[
      var text = attributes.get("text");
      text=text.replace('.','_');
      
      project.setProperty(attributes.get("property"), text);
     ]]>
  </scriptdef>

  <scriptdef name="unwrap" language="javascript">
     <attribute name="text" />
     <attribute name="property" />
     <![CDATA[
      var text = attributes.get("text");
      text=text.trim();
      if(text.startsWith('"') && text.endsWith('"')) {
        text=text.substring(1,text.length()-1);
      }
      project.setProperty(attributes.get("property"), text);
     ]]>
  </scriptdef>



  <macrodef name="loadmf">
        <attribute name="jar"/>
        <attribute name="prefix" default=""/>
        <sequential>
            <loadproperties>
                <!-- Load the manifest entries -->
                <zipentry zipfile="@{jar}" name="META-INF/MANIFEST.MF"/>
                <!-- Add the prefix -->
                <filterchain>
                    <prefixlines prefix="@{prefix}"/>
                </filterchain>
            </loadproperties>
        </sequential>
    </macrodef>


  <target name="init">
    <!-- Create the time stamp -->
    
    <delete dir="${temp}"/>
    <delete dir="${dist}/"/>
  </target>

  <target name="dist" description="generate the distribution">
    
    <!-- jar -->
    <path id="path.jar">
      <fileset dir="." casesensitive="yes">
        <include name="*.jar"/>
      </fileset>
    </path>
    <property name="jar" refid="path.jar"/>
    <getNameFrom path="${jar}" property="jarName"/>


    <!-- driver (cfc) -->
    <path id="path.cfc">
      <fileset dir="." casesensitive="yes">
        <include name="*.cfc"/>
      </fileset>
    </path>
    <property name="cfc" refid="path.cfc"/>
    <getNameFrom path="${cfc}" property="cfcName"/>


    <unwrap text="${id}" property="id"/>
    <unwrap text="${label}" property="label"/>
    <unwrap text="${description}" property="desc"/>

    <echo message="==================="/>
    <echo message="${id}"/>
    <echo message="${label}"/>
    <echo message="${desc}"/>
    <echo message="${jar}"/>
    <echo message="${cfc}"/>
    <echo message="${cfcName}"/>
    <echo message="${connstr}"/>
    <echo message="${jdbcid}"/>


    <!-- Read mf entries -->
    <loadmf jar="${jar}" prefix="manifest."/>
    <trim text="${manifest.Bundle-SymbolicName}" property="symbolicName"/>
    <trim text="${manifest.Bundle-Version}" property="symbolicVersion"/>
    
    
    
    <!-- read class info -->
    <unzip src="${jar}" dest="${temp}">
      <patternset>
        <include name="META-INF/services/java.sql.Driver" />
      </patternset>
    </unzip>


    
    <loadfile property="className1"
      srcFile="${temp}/META-INF/services/java.sql.Driver"/>
    <!-- it is possible that more than one driver is defined (for example MySQl does so), we are only intressted uin the first one -->
    <first text="${className1}" property="className2" default="${defaultClassName}"/>
    <trim text="${className2}" property="className3"/>
    <unwrap text="${className3}" property="className"/>
    <unwrap text="${connstr}" property="_connstr"/>
    
    <echo message="Driver class name:${className}"/>


    <property name="distl" location="${temp}/extension/${symbolicName}-${symbolicVersion}/"/>
    
    <mkdir dir="${distl}"/>
      

    <tstamp>
     <format property="NOW" pattern="yyyy-MM-dd HH:mm:ss" />
    </tstamp>

    <!-- write the manifest -->
    <echo file="${distl}/META-INF/MANIFEST.MF">Manifest-Version: 1.0
Built-Date: ${NOW}
version: "${symbolicVersion}"
id: "${id}"
name: "${label}"
description: "${desc}"
category: "Datasource"
lucee-core-version: "5.0.0.019"
start-bundles: false
jdbc: "[{'label':'${label}','id':'${jdbcid}','connectionString':'${_connstr}','class':'${className}','bundleName':'${symbolicName}','bundleVersion':'${symbolicVersion}'}]"
</echo>

    <!-- copy the jars necessary -->
    <copy file="${jar}" tofile="${distl}/jars/${symbolicName}-${symbolicVersion}.jar"/>
    
    <!-- copy the cfcs necessary -->
    <copy file="${cfc}" tofile="${distl}/context/admin/dbdriver/${cfcName}"/>
    <loadfile property="content1" srcFile="${distl}/context/admin/dbdriver/${cfcName}" />
    <replace haystack="${content1}" needle="{class-name}" repl="${className}" property="content2"/>
    <replace haystack="${content2}" needle="{bundle-name}" repl="${symbolicName}" property="content3"/>
    <replace haystack="${content3}" needle="{id}" repl="${jdbcid}" property="content4"/>
    <replace haystack="${content4}" needle="{label}" repl="${label}" property="content5"/>
    <replace haystack="${content5}" needle="{description}" repl="${desc}" property="content6"/>
    <replace haystack="${content6}" needle="{connString}" repl="${_connstr}" property="content7"/>
    <echo message="${content7}" file="${distl}/context/admin/dbdriver/${cfcName}"/>

    <!-- copy optional logo -->
    <copy todir="${distl}/META-INF">
      <fileset dir=".">
        <include name="logo.png"/>
      </fileset>
    </copy>

    <!-- Zip everything  -->
     <zip destfile="${dist}/${filename}-${manifest.Bundle-Version}.lex">
        <zipfileset dir="${distl}"/>
    </zip>    
  </target>

	<target name="clean"  depends="dist" description="clean up" >
		<delete dir="${temp}"/>
	</target>

</project>